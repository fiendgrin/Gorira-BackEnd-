@model TrackVM
@{
    ViewData["Title"] = "Tracks";
}
@using X.PagedList;
@using X.PagedList.Mvc.Core;
<!--Main Start-->
<main id="tracksMain">
    <div class="box">
        @await Html.PartialAsync("_FilterPartial",Model.filterVM)

        <div class="right">
            <div class="topText">
                <div class="leftName">
                    <img class="openFilters"
                         src="~/assets/images/icons/filtersiconImage24px.svg"
                         alt="" />
                    Tracks
                </div>
                <div class="sort">
                    <img src="~/assets/images/icons/sort-cute.svg" alt="" />
                    <p>Sort by</p>
                </div>
                <div class="sortHolder">
                    <a href="">Popular</a>
                    <a href="">New</a>
                </div>
            </div>
            @if (Model.Tracks != null && Model.Tracks.Count > 0)
            {
                <div class="theTracks">
                    @foreach (Track track in Model.Tracks)
                    {
                        AppUser user = Model.Users.FirstOrDefault(u => u.Id == track.UserId);
                        <!--Single Card Start-->
                        <div class="myCard">
                            <img name="@track.Title"
                            artist="@user.DisplayName"
                            track="./assets/audio/tagged/@track.Tagged"
                            cover="./assets/images/@(user.ProfilePicture == track.Cover ? $"pfp/{track.Cover}": $"covers/{track.Cover}")"
                            class="play"
                            src="~/assets/images/icons/play.svg"
                            alt="" />
                            <img class="pause" src="~/assets/images/icons/pause.svg" alt="" />
                            <a href="">
                                <img class="cover"
                                src="~/assets/images/@(user.ProfilePicture == track.Cover ? $"pfp/{track.Cover}": $"covers/{track.Cover}")"
                                alt="" />
                            </a>
                            <div class="bottomText">
                                <div class="top">
                                    <p class="price">@(track.Price)$</p>
                                    <p class="tempo">
                                        <img src="~/assets/images/icons/dot.svg" alt="" /> @(track.Bpm) BPM
                                    </p>
                                </div>
                                <a href=""><h6 class="title">@track.Title</h6></a>
                                <a class="artista" asp-controller="Artist" asp-action="Detail" asp-route-Id="@user.Id"><p class="artist">@user.DisplayName</p></a>
                            </div>
                        </div>
                        <!--Single Card End-->
                    }
                </div>
                @Html.PagedListPager((IPagedList) Model.Tracks,page=>Url.Action("Index","Track", new {page = page,
            search = @Context.Request.Query["search"], order = @Context.Request.Query["order"],
            genres = @Context.Request.Query["genres"], moods = @Context.Request.Query["moods"],
            keys = @Context.Request.Query["keys"], minPrice = @Context.Request.Query["minPrice"], maxPrice = @Context.Request.Query["maxPrice"],
            minBpm = @Context.Request.Query["minBpm"], maxBpm = @Context.Request.Query["maxBpm"]
                }),
            new X.PagedList.Web.Common.PagedListRenderOptions
            {
            Display = X.PagedList.Web.Common.PagedListDisplayMode.IfNeeded,
            DisplayPageCountAndCurrentLocation = false,
            MaximumPageNumbersToDisplay = 5 })}
        </div>
    </div>
    <div id="aplayer"></div>
</main>
<!--Main End-->
<!--Tracks-->
<script src="~/assets/javascript/tracks.js" asp-append-version="true"></script>